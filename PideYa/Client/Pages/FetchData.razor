@page "/fetchdata"
@inject OrderNotifierService orderNotifier
@inject IDishService DishService
@inject IOrderService OrderService

<PageTitle>PideYa - Pilas que tengo hambre</PageTitle>

<h1>La comelona del dia!</h1>

<p>Que hay pa hoy?</p>

@if (dishes == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row row-cols-1 row-cols-md-2 g-4">
        @foreach (var dish in dishes)
        {

            <div class="col">
                <div class="card">
                    @if (dish.Image is not null && dish.Image.Count() > 0)
                    {
                        <img src=@($"/{dish.Image.First().url}") class="card-img-top" alt=@(dish.Description??"Dish image")>
                    }
                    else
                    {
                        <img src="/Resources/images/noimagen.png" class="card-img-top" alt="No image found">
                    }
                    <div class="card-body">
                        <h5 class="card-title">@dish.Name</h5>
                        <p class="card-text">@dish.Description</p>
                        <p>$@dish.Price</p>
                        <a @onclick="async ()=> await AddToCar(dish.id)" class="btn btn-primary">Mete eso ahi!</a>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private IEnumerable<Dish>? dishes;
    private Order? order;

    protected override async Task OnInitializedAsync()
    {
        dishes = await DishService.GetAll();
        order = await OrderService.GetActive();
        await orderNotifier.AddOrder(order);
    }

    private async Task AddToCar(int id)
    {
        var orderId = order?.Id ?? 0;
        order = await OrderService.AddDetail(orderId, id);
        await orderNotifier.AddOrder(order);
    }
}

