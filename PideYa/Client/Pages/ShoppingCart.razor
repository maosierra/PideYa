@page "/shoppingcart"
@inject HttpClient Http
@inject PideYa.Client.Services.OrderNotifierService orderNotifier
@using PideYa.Shared.Entities

<PageTitle>PideYa - Apurate...</PageTitle>

<h1>Apurate que se acaba!!!</h1>
<p>Confirma la comelona!</p>
<div class="row">
    <div class="col-lg-8 mb-4">
        <table class="table">
            <thead>
                <tr>
                    <th>Producto</th>
                    <th class="d-none d-md-table-cell"></th>
                    <th class="d-none d-md-table-cell">Precio unidad</th>
                    <th>Cant</th>
                    <th>Subtotal</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (order != null && order.OrderDetails != null && order.OrderDetails.Count() > 0)
                {
                    @foreach (var detail in order.OrderDetails)
                    {
                        <tr>
                            <td>
                                <h5>@detail.Dish.Name</h5>
                                <small>@detail.Dish.Description</small>
                                <br />
                            </td>
                            <td class="d-none d-md-table-cell" style="max-width: 100px">
                                <img class="w-75" src="https://embed.widencdn.net/img/mccormick/v0rvkwdwlk/2000x1125px/sopa_de_pollo.jpg?crop=true&q=80&color=ffffffff&u=qwwekl" alt="Plato" title="plato" />
                            </td>
                            <td class="d-none d-md-table-cell">
                                <span>$@detail.Dish.Price</span>
                            </td>
                            <td>
                                <span>@detail.Quantity</span>
                            </td>
                            <td>
                                <span>$@(detail.Dish.Price * detail.Quantity)</span>
                            </td>
                            <td>
                                <a style="cursor: pointer;"
                                   @onclick="async () =>await onDeleteDetail(detail.Id)">

                                    <span class="oi oi-trash" aria-hidden="true"></span>

                                </a>
                            </td>
                        </tr>
                    }
                }

            </tbody>
        </table>
    </div>

    <div class="col-lg-4 mb-4 mt-5">
        <div class="row">
            <div class="col-12">
                <table class="table table-striped">
                    <tbody>
                        <tr class="totals">
                            <td colspan="1" class="text-left">Envio</td>
                            <td colspan="1" class="text-right">GRATIS!!!</td>
                        </tr>
                        <tr class="totals key">
                            <td colspan="1" class="text-left">
                                <strong>Total</strong>
                            </td>
                            <td colspan="1" class="text-right">
                                <strong>$@(order != null ? order.Total : 0)</strong>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div class="text-center col-12">
                    <a class="btn btn-primary btn-block col-12" title="Comprar">Asegura tu comida</a>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Order? order;

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetAsync("/api/OrderByEmployee/1");
        if (response.IsSuccessStatusCode)
        {
            order = await response.Content.ReadFromJsonAsync<Order>();
            SumUpDetails();
            await orderNotifier.AddOrder(order);
        }
    }

    private void SumUpDetails()
    {
        if (order is null) return;
        if (order.OrderDetails.Count() <= 0) order.Total = 0;
        foreach (var detail in order.OrderDetails)
        {
            order.Total += detail.Quantity * detail.Dish.Price;
        }
    }

    private async Task onDeleteDetail(int detailId)
    {
        var orderId = order?.Id ?? 0;
        var response = await Http.GetAsync($"/api/OrderDeleteDetail?orderId={orderId}&detailId={detailId}");
        if (response.IsSuccessStatusCode)
        {
            order = await response.Content.ReadFromJsonAsync<Order>();
            SumUpDetails();
            await orderNotifier.AddOrder(order);
            StateHasChanged();
        }
    }
}

